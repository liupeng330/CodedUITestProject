// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Common.UITestFramework.UIMaps.AgreementWindowClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class AgreementWindow
    {
        
        /// <summary>
        /// ClickAgreeButton
        /// </summary>
        public void ClickAgreeButton()
        {
            #region Variable Declarations
            WinButton uIIAcceptButton = this.UIAgreementWindow.UIIAcceptWindow.UIIAcceptButton;
            #endregion

            // Click 'I Accept' button
            Mouse.Click(uIIAcceptButton, new Point(49, 11));
        }
        
        #region Properties
        public UIAgreementWindow UIAgreementWindow
        {
            get
            {
                if ((this.mUIAgreementWindow == null))
                {
                    this.mUIAgreementWindow = new UIAgreementWindow();
                }
                return this.mUIAgreementWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIAgreementWindow mUIAgreementWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAgreementWindow : WinWindow
    {
        
        public UIAgreementWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Agreement";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Agreement");
            #endregion
        }
        
        #region Properties
        public UIIAcceptWindow UIIAcceptWindow
        {
            get
            {
                if ((this.mUIIAcceptWindow == null))
                {
                    this.mUIIAcceptWindow = new UIIAcceptWindow(this);
                }
                return this.mUIIAcceptWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIIAcceptWindow mUIIAcceptWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIIAcceptWindow : WinWindow
    {
        
        public UIIAcceptWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sageButtonOK";
            this.WindowTitles.Add("Agreement");
            #endregion
        }
        
        #region Properties
        public WinButton UIIAcceptButton
        {
            get
            {
                if ((this.mUIIAcceptButton == null))
                {
                    this.mUIIAcceptButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIIAcceptButton.SearchProperties[WinButton.PropertyNames.Name] = "I Accept";
                    this.mUIIAcceptButton.WindowTitles.Add("Agreement");
                    #endregion
                }
                return this.mUIIAcceptButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIIAcceptButton;
        #endregion
    }
}
