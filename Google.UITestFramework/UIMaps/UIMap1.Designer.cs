// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Google.UITestFramework.UIMaps.UIMap1Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class UIMap1
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinRow uIRow1Row = this.UIWss_adsagetest163comWindow.UIItemWindow.UIItemTable.UIDataPanelClient.UIRow1Row;
            #endregion

            // Verify that 'Row 1' row's property 'Value' equals ';;CampaignAutoTest;Ad1;Active;-;-;10.00;-;0;0;0.00%;0.00;0.00;0.00;0.00;0;0.00%;'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIRow1RowValue, uIRow1Row.Value);
        }
        
        /// <summary>
        /// AssertMethod2 - Use 'AssertMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            WinRow uIRow1Row = this.UIWss_adsagetest163comWindow.UIItemWindow.UIItemTable.UIDataPanelClient.UIRow1Row;
            #endregion

            // Verify that 'Row 1' row's property 'Value' equals ';;CampaignAutoTest;;negative;Exact;'
            Assert.AreEqual(this.AssertMethod2ExpectedValues.UIRow1RowValue, uIRow1Row.Value);
        }
        
        /// <summary>
        /// AssertMethod3 - Use 'AssertMethod3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod3()
        {
            #region Variable Declarations
            WinCell uICampaignrow2Cell = this.UIWss_adsagetest163comWindow.UIItemWindow.UIRow3Row.UICampaignrow2Cell;
            #endregion

            // Verify that 'Campaign row 2' cell's property 'Value' equals ''
            Assert.AreEqual(this.AssertMethod3ExpectedValues.UICampaignrow2CellValue, uICampaignrow2Cell.Value);
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public virtual AssertMethod3ExpectedValues AssertMethod3ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod3ExpectedValues == null))
                {
                    this.mAssertMethod3ExpectedValues = new AssertMethod3ExpectedValues();
                }
                return this.mAssertMethod3ExpectedValues;
            }
        }
        
        public UIWss_adsagetest163comWindow UIWss_adsagetest163comWindow
        {
            get
            {
                if ((this.mUIWss_adsagetest163comWindow == null))
                {
                    this.mUIWss_adsagetest163comWindow = new UIWss_adsagetest163comWindow();
                }
                return this.mUIWss_adsagetest163comWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private AssertMethod3ExpectedValues mAssertMethod3ExpectedValues;
        
        private UIWss_adsagetest163comWindow mUIWss_adsagetest163comWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Row 1' row's property 'Value' equals ';;CampaignAutoTest;Ad1;Active;-;-;10.00;-;0;0;0.00%;0.00;0.00;0.00;0.00;0;0.00%;'
        /// </summary>
        public string UIRow1RowValue = ";;CampaignAutoTest;Ad1;Active;-;-;10.00;-;0;0;0.00%;0.00;0.00;0.00;0.00;0;0.00%;";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Row 1' row's property 'Value' equals ';;CampaignAutoTest;;negative;Exact;'
        /// </summary>
        public string UIRow1RowValue = ";;CampaignAutoTest;;negative;Exact;";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class AssertMethod3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Campaign row 2' cell's property 'Value' equals ''
        /// </summary>
        public string UICampaignrow2CellValue = "";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIWss_adsagetest163comWindow : WinWindow
    {
        
        public UIWss_adsagetest163comWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "wss_adsagetest@163.com(CNY) - CampaignAutoTest - adSage for Performance";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("wss_adsagetest@163.com(CNY) - CampaignAutoTest - adSage for Performance");
            this.WindowTitles.Add("wss_adsagetest@163.com(CNY) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "16";
            this.WindowTitles.Add("wss_adsagetest@163.com(CNY) - CampaignAutoTest - adSage for Performance");
            this.WindowTitles.Add("wss_adsagetest@163.com(CNY) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public UIRow3Row UIRow3Row
        {
            get
            {
                if ((this.mUIRow3Row == null))
                {
                    this.mUIRow3Row = new UIRow3Row(this);
                }
                return this.mUIRow3Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        
        private UIRow3Row mUIRow3Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemTable : WinTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("wss_adsagetest@163.com(CNY) - CampaignAutoTest - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIDataPanelClient UIDataPanelClient
        {
            get
            {
                if ((this.mUIDataPanelClient == null))
                {
                    this.mUIDataPanelClient = new UIDataPanelClient(this);
                }
                return this.mUIDataPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIDataPanelClient mUIDataPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIDataPanelClient : WinClient
    {
        
        public UIDataPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Data Panel";
            this.WindowTitles.Add("wss_adsagetest@163.com(CNY) - CampaignAutoTest - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinRow UIRow1Row
        {
            get
            {
                if ((this.mUIRow1Row == null))
                {
                    this.mUIRow1Row = new WinRow(this);
                    #region Search Criteria
                    this.mUIRow1Row.SearchProperties[WinRow.PropertyNames.Name] = "Row 1";
                    this.mUIRow1Row.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mUIRow1Row.WindowTitles.Add("wss_adsagetest@163.com(CNY) - CampaignAutoTest - adSage for Performance");
                    #endregion
                }
                return this.mUIRow1Row;
            }
        }
        #endregion
        
        #region Fields
        private WinRow mUIRow1Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRow3Row : WinRow
    {
        
        public UIRow3Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Name] = "Row 3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("wss_adsagetest@163.com(CNY) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinCell UICampaignrow2Cell
        {
            get
            {
                if ((this.mUICampaignrow2Cell == null))
                {
                    this.mUICampaignrow2Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUICampaignrow2Cell.WindowTitles.Add("wss_adsagetest@163.com(CNY) - adSage for Performance");
                    #endregion
                }
                return this.mUICampaignrow2Cell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUICampaignrow2Cell;
        #endregion
    }
}
