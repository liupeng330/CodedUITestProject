// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Facebook.UITestFramework.UIMaps.PerformanceDataClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class PerformanceData
    {
        
        /// <summary>
        /// ClickAccountDetailTab
        /// </summary>
        public void ClickAccountDetailTab()
        {
            #region Variable Declarations
            WinTabPage uIAccountDetailTabPage = this.UIAccount2348004880USDWindow.UIItemTabList.UIAccountDetailTabPage;
            #endregion

            // Click 'Account Detail' tab
            Mouse.Click(uIAccountDetailTabPage, new Point(63, 7));
        }
        
        /// <summary>
        /// ClickAccountSummary
        /// </summary>
        public void ClickAccountSummary()
        {
            #region Variable Declarations
            WinTabPage uIAccountSummaryTabPage = this.UIAccount2348004880USDWindow.UIItemTabList.UIAccountSummaryTabPage;
            #endregion

            // Click 'Account Summary' tab
            Mouse.Click(uIAccountSummaryTabPage, new Point(76, 11));
        }
        
        /// <summary>
        /// ClickAdsTab
        /// </summary>
        public void ClickAdsTab()
        {
            #region Variable Declarations
            WinTabPage uIAds13TabPage = this.UIAccount2348004880USDWindow.UIItemTabList.UIAds13TabPage;
            #endregion

            // Click 'Ads(13)' tab
            Mouse.Click(uIAds13TabPage, new Point(28, 8));
        }
        
        /// <summary>
        /// ClickCampaignsTab
        /// </summary>
        public void ClickCampaignsTab()
        {
            #region Variable Declarations
            WinTabPage uICampaigns4TabPage = this.UIAccount2348004880USDWindow.UIItemTabList.UICampaigns4TabPage;
            #endregion

            // Click 'Campaigns(4)' tab
            Mouse.Click(uICampaigns4TabPage, new Point(47, 10));
        }
        
        /// <summary>
        /// ClickCreateCustomDateOKButton
        /// </summary>
        public void ClickCreateCustomDateOKButton()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UICreateCustomDateRangWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(45, 9));
        }
        
        /// <summary>
        /// ClickDownloadCheckedAccounts
        /// </summary>
        public void ClickDownloadCheckedAccounts()
        {
            #region Variable Declarations
            WinButton uIDownloadcheckedaccouButton = this.UIDownloadPerformanceWindow.UIToolStripWindow.UIDownloadcheckedaccouButton;
            #endregion

            // Click 'Download checked accounts' button
            Mouse.Click(uIDownloadcheckedaccouButton, new Point(81, 7));
        }
        
        /// <summary>
        /// ClickDownloadMissingPerformanceDataButton
        /// </summary>
        public void ClickDownloadMissingPerformanceDataButton()
        {
            #region Variable Declarations
            WinCell uIDownloadrealtimeperfCell = this.UIDownloadPerformanceWindow.UIDgvUnDownloadDateRanWindow.UIDataGridViewTable.UIRow0Row.UIDownloadrealtimeperfCell;
            #endregion

            // Click 'Download real-time performance data' cell
            Mouse.Click(uIDownloadrealtimeperfCell, new Point(91, 8));
        }
        
        /// <summary>
        /// ClickDownloadPerformanceButton
        /// </summary>
        public void ClickDownloadPerformanceButton()
        {
            #region Variable Declarations
            WinTabPage uIHomeTabPage = this.UIAccount2348004880USDWindow.UIRibbonTabsTabList.UIHomeTabPage;
            WinButton uIDownloadPerformanceButton = this.UIAccount2348004880USDWindow.UIRibbonToolBar.UIDownloadPerformanceButton;
            #endregion

            // Click 'Home' tab
            Mouse.Click(uIHomeTabPage, new Point(33, 9));

            // Click 'Download Performance' button
            Mouse.Click(uIDownloadPerformanceButton, new Point(39, 46));
        }
        
        /// <summary>
        /// SelectEndDate - Use 'SelectEndDateParams' to pass parameters into this method.
        /// </summary>
        public void SelectEndDate()
        {
            #region Variable Declarations
            WinControl uIThursdayFebruary0920DropDown = this.UICreateCustomDateRangWindow.UIDateTimePickerEndClient.UIThursdayFebruary0920DropDown;
            WinControl uIThursdayFebruary0220DropDown = this.UICreateCustomDateRangWindow.UIDateTimePickerEndClient.UIThursdayFebruary0220DropDown;
            WinControl uIThursdayJanuary26201DropDown = this.UICreateCustomDateRangWindow.UIDateTimePickerEndClient.UIThursdayJanuary26201DropDown;
            WinControl uIThursdayJanuary19201DropDown = this.UICreateCustomDateRangWindow.UIDateTimePickerEndClient.UIThursdayJanuary19201DropDown;
            WinControl uIThursdayJanuary12201DropDown = this.UICreateCustomDateRangWindow.UIDateTimePickerEndClient.UIThursdayJanuary12201DropDown;
            WinControl uIThursdayJanuary05201DropDown = this.UICreateCustomDateRangWindow.UIDateTimePickerEndClient.UIThursdayJanuary05201DropDown;
            WinClient uIItemClient = this.UIItemWindow.UIItemWindow1.UIItemClient;
            #endregion

            // Click 'Thursday, February 09, 2012' DropDown
            Mouse.Click(uIThursdayFebruary0920DropDown, new Point(162, 11));

            // Type '{Up}' in 'Thursday, February 09, 2012' DropDown
            Keyboard.SendKeys(uIThursdayFebruary0920DropDown, this.SelectEndDateParams.UIThursdayFebruary0920DropDownSendKeys, ModifierKeys.None);

            // Type '{Up}' in 'Thursday, February 02, 2012' DropDown
            Keyboard.SendKeys(uIThursdayFebruary0220DropDown, this.SelectEndDateParams.UIThursdayFebruary0220DropDownSendKeys, ModifierKeys.None);

            // Type '{Up}' in 'Thursday, January 26, 2012' DropDown
            Keyboard.SendKeys(uIThursdayJanuary26201DropDown, this.SelectEndDateParams.UIThursdayJanuary26201DropDownSendKeys, ModifierKeys.None);

            // Type '{Up}' in 'Thursday, January 19, 2012' DropDown
            Keyboard.SendKeys(uIThursdayJanuary19201DropDown, this.SelectEndDateParams.UIThursdayJanuary19201DropDownSendKeys, ModifierKeys.None);

            // Type '{Up}' in 'Thursday, January 12, 2012' DropDown
            Keyboard.SendKeys(uIThursdayJanuary12201DropDown, this.SelectEndDateParams.UIThursdayJanuary12201DropDownSendKeys, ModifierKeys.None);

            // Type '{Up}' in 'Thursday, January 05, 2012' DropDown
            Keyboard.SendKeys(uIThursdayJanuary05201DropDown, this.SelectEndDateParams.UIThursdayJanuary05201DropDownSendKeys, ModifierKeys.None);

            // Click 'Unknown Name' client
            Mouse.Click(uIItemClient, new Point(225, 102));
        }
        
        /// <summary>
        /// SelectStartDate - Use 'SelectStartDateParams' to pass parameters into this method.
        /// </summary>
        public void SelectStartDate()
        {
            #region Variable Declarations
            WinControl uITuesdayJanuary102012DropDown = this.UICreateCustomDateRangWindow.UIDateTimePickerStartClient.UITuesdayJanuary102012DropDown;
            WinControl uITuesdayJanuary032012DropDown = this.UICreateCustomDateRangWindow.UIDateTimePickerStartClient.UITuesdayJanuary032012DropDown;
            WinClient uIItemClient = this.UIItemWindow.UIItemWindow1.UIItemClient;
            #endregion

            // Click 'Tuesday, January 10, 2012' DropDown
            Mouse.Click(uITuesdayJanuary102012DropDown, new Point(160, 10));

            // Type '{Up}' in 'Tuesday, January 10, 2012' DropDown
            Keyboard.SendKeys(uITuesdayJanuary102012DropDown, this.SelectStartDateParams.UITuesdayJanuary102012DropDownSendKeys, ModifierKeys.None);

            // Type '{Up}' in 'Tuesday, January 03, 2012' DropDown
            Keyboard.SendKeys(uITuesdayJanuary032012DropDown, this.SelectStartDateParams.UITuesdayJanuary032012DropDownSendKeys, ModifierKeys.None);

            // Click 'Unknown Name' client
            Mouse.Click(uIItemClient, new Point(166, 82));
        }
        
        #region Properties
        public virtual SelectEndDateParams SelectEndDateParams
        {
            get
            {
                if ((this.mSelectEndDateParams == null))
                {
                    this.mSelectEndDateParams = new SelectEndDateParams();
                }
                return this.mSelectEndDateParams;
            }
        }
        
        public virtual SelectStartDateParams SelectStartDateParams
        {
            get
            {
                if ((this.mSelectStartDateParams == null))
                {
                    this.mSelectStartDateParams = new SelectStartDateParams();
                }
                return this.mSelectStartDateParams;
            }
        }
        
        public UIAccount2348004880USDWindow UIAccount2348004880USDWindow
        {
            get
            {
                if ((this.mUIAccount2348004880USDWindow == null))
                {
                    this.mUIAccount2348004880USDWindow = new UIAccount2348004880USDWindow();
                }
                return this.mUIAccount2348004880USDWindow;
            }
        }
        
        public UIDownloadPerformanceWindow UIDownloadPerformanceWindow
        {
            get
            {
                if ((this.mUIDownloadPerformanceWindow == null))
                {
                    this.mUIDownloadPerformanceWindow = new UIDownloadPerformanceWindow();
                }
                return this.mUIDownloadPerformanceWindow;
            }
        }
        
        public UICreateCustomDateRangWindow UICreateCustomDateRangWindow
        {
            get
            {
                if ((this.mUICreateCustomDateRangWindow == null))
                {
                    this.mUICreateCustomDateRangWindow = new UICreateCustomDateRangWindow();
                }
                return this.mUICreateCustomDateRangWindow;
            }
        }
        
        public UIItemWindow3 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow3();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private SelectEndDateParams mSelectEndDateParams;
        
        private SelectStartDateParams mSelectStartDateParams;
        
        private UIAccount2348004880USDWindow mUIAccount2348004880USDWindow;
        
        private UIDownloadPerformanceWindow mUIDownloadPerformanceWindow;
        
        private UICreateCustomDateRangWindow mUICreateCustomDateRangWindow;
        
        private UIItemWindow3 mUIItemWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectEndDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SelectEndDateParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Up}' in 'Thursday, February 09, 2012' DropDown
        /// </summary>
        public string UIThursdayFebruary0920DropDownSendKeys = "{Up}";
        
        /// <summary>
        /// Type '{Up}' in 'Thursday, February 02, 2012' DropDown
        /// </summary>
        public string UIThursdayFebruary0220DropDownSendKeys = "{Up}";
        
        /// <summary>
        /// Type '{Up}' in 'Thursday, January 26, 2012' DropDown
        /// </summary>
        public string UIThursdayJanuary26201DropDownSendKeys = "{Up}";
        
        /// <summary>
        /// Type '{Up}' in 'Thursday, January 19, 2012' DropDown
        /// </summary>
        public string UIThursdayJanuary19201DropDownSendKeys = "{Up}";
        
        /// <summary>
        /// Type '{Up}' in 'Thursday, January 12, 2012' DropDown
        /// </summary>
        public string UIThursdayJanuary12201DropDownSendKeys = "{Up}";
        
        /// <summary>
        /// Type '{Up}' in 'Thursday, January 05, 2012' DropDown
        /// </summary>
        public string UIThursdayJanuary05201DropDownSendKeys = "{Up}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectStartDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SelectStartDateParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Up}' in 'Tuesday, January 10, 2012' DropDown
        /// </summary>
        public string UITuesdayJanuary102012DropDownSendKeys = "{Up}";
        
        /// <summary>
        /// Type '{Up}' in 'Tuesday, January 03, 2012' DropDown
        /// </summary>
        public string UITuesdayJanuary032012DropDownSendKeys = "{Up}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccount2348004880USDWindow : WinWindow
    {
        
        public UIAccount2348004880USDWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Account2 #348004880(USD) - adSage for Performance";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            this.WindowTitles.Add("haih@ad-sage.com #46848300(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIRibbonToolBar UIRibbonToolBar
        {
            get
            {
                if ((this.mUIRibbonToolBar == null))
                {
                    this.mUIRibbonToolBar = new UIRibbonToolBar(this);
                }
                return this.mUIRibbonToolBar;
            }
        }
        
        public UIPanelEditingWindow UIPanelEditingWindow
        {
            get
            {
                if ((this.mUIPanelEditingWindow == null))
                {
                    this.mUIPanelEditingWindow = new UIPanelEditingWindow(this);
                }
                return this.mUIPanelEditingWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIGrdCtrSummaryWindow UIGrdCtrSummaryWindow
        {
            get
            {
                if ((this.mUIGrdCtrSummaryWindow == null))
                {
                    this.mUIGrdCtrSummaryWindow = new UIGrdCtrSummaryWindow(this);
                }
                return this.mUIGrdCtrSummaryWindow;
            }
        }
        
        public UIItemTabList UIItemTabList
        {
            get
            {
                if ((this.mUIItemTabList == null))
                {
                    this.mUIItemTabList = new UIItemTabList(this);
                }
                return this.mUIItemTabList;
            }
        }
        
        public UIRibbonTabsTabList UIRibbonTabsTabList
        {
            get
            {
                if ((this.mUIRibbonTabsTabList == null))
                {
                    this.mUIRibbonTabsTabList = new UIRibbonTabsTabList(this);
                }
                return this.mUIRibbonTabsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonToolBar mUIRibbonToolBar;
        
        private UIPanelEditingWindow mUIPanelEditingWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIGrdCtrSummaryWindow mUIGrdCtrSummaryWindow;
        
        private UIItemTabList mUIItemTabList;
        
        private UIRibbonTabsTabList mUIRibbonTabsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRibbonToolBar : WinToolBar
    {
        
        public UIRibbonToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Synchronization";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinButton UIDownloadPerformanceButton
        {
            get
            {
                if ((this.mUIDownloadPerformanceButton == null))
                {
                    this.mUIDownloadPerformanceButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDownloadPerformanceButton.SearchProperties[WinButton.PropertyNames.Name] = "Download Performance";
                    this.mUIDownloadPerformanceButton.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIDownloadPerformanceButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDownloadPerformanceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPanelEditingWindow : WinWindow
    {
        
        public UIPanelEditingWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "panelEditing";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            this.WindowTitles.Add("haih@ad-sage.com #46848300(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIItemPane UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new UIItemPane(this);
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPane mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemPane : WinPane
    {
        
        public UIItemPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            this.WindowTitles.Add("haih@ad-sage.com #46848300(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinPane UIItemPane1
        {
            get
            {
                if ((this.mUIItemPane1 == null))
                {
                    this.mUIItemPane1 = new WinPane(this);
                    #region Search Criteria
                    this.mUIItemPane1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemPane1.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    this.mUIItemPane1.WindowTitles.Add("haih@ad-sage.com #46848300(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIItemPane1;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUIItemPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "16";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public UIRow1Row UIRow1Row
        {
            get
            {
                if ((this.mUIRow1Row == null))
                {
                    this.mUIRow1Row = new UIRow1Row(this);
                }
                return this.mUIRow1Row;
            }
        }
        
        public UINewItemRowRow UINewItemRowRow
        {
            get
            {
                if ((this.mUINewItemRowRow == null))
                {
                    this.mUINewItemRowRow = new UINewItemRowRow(this);
                }
                return this.mUINewItemRowRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        
        private UIRow1Row mUIRow1Row;
        
        private UINewItemRowRow mUINewItemRowRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemTable : WinTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIHeaderPanelClient UIHeaderPanelClient
        {
            get
            {
                if ((this.mUIHeaderPanelClient == null))
                {
                    this.mUIHeaderPanelClient = new UIHeaderPanelClient(this);
                }
                return this.mUIHeaderPanelClient;
            }
        }
        
        public UIDataPanelClient UIDataPanelClient
        {
            get
            {
                if ((this.mUIDataPanelClient == null))
                {
                    this.mUIDataPanelClient = new UIDataPanelClient(this);
                }
                return this.mUIDataPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIHeaderPanelClient mUIHeaderPanelClient;
        
        private UIDataPanelClient mUIDataPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIHeaderPanelClient : WinClient
    {
        
        public UIHeaderPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinRowHeader UIItemRowHeader
        {
            get
            {
                if ((this.mUIItemRowHeader == null))
                {
                    this.mUIItemRowHeader = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIItemRowHeader;
            }
        }
        #endregion
        
        #region Fields
        private WinRowHeader mUIItemRowHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDataPanelClient : WinClient
    {
        
        public UIDataPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Data Panel";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinRow UINewItemRowRow
        {
            get
            {
                if ((this.mUINewItemRowRow == null))
                {
                    this.mUINewItemRowRow = new WinRow(this);
                    #region Search Criteria
                    this.mUINewItemRowRow.SearchProperties[WinRow.PropertyNames.Name] = "NewItem Row";
                    this.mUINewItemRowRow.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mUINewItemRowRow.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUINewItemRowRow;
            }
        }
        #endregion
        
        #region Fields
        private WinRow mUINewItemRowRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRow1Row : WinRow
    {
        
        public UIRow1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Name] = "Row 1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinCell UIUk_adSagePageFans_AFCell
        {
            get
            {
                if ((this.mUIUk_adSagePageFans_AFCell == null))
                {
                    this.mUIUk_adSagePageFans_AFCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIUk_adSagePageFans_AFCell.SearchProperties[WinCell.PropertyNames.Value] = "Uk_adSage Page Fans_AFP_November_2011";
                    this.mUIUk_adSagePageFans_AFCell.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIUk_adSagePageFans_AFCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIUk_adSagePageFans_AFCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UINewItemRowRow : WinRow
    {
        
        public UINewItemRowRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Name] = "NewItem Row";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinCell UILocalStatusExtensionCell
        {
            get
            {
                if ((this.mUILocalStatusExtensionCell == null))
                {
                    this.mUILocalStatusExtensionCell = new WinCell(this);
                    #region Search Criteria
                    this.mUILocalStatusExtensionCell.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUILocalStatusExtensionCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUILocalStatusExtensionCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "32";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIItemTable1 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable1(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable1 mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemTable1 : WinTable
    {
        
        public UIItemTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIDataPanelClient1 UIDataPanelClient
        {
            get
            {
                if ((this.mUIDataPanelClient == null))
                {
                    this.mUIDataPanelClient = new UIDataPanelClient1(this);
                }
                return this.mUIDataPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIDataPanelClient1 mUIDataPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDataPanelClient1 : WinClient
    {
        
        public UIDataPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Data Panel";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinRow UIRow1Row
        {
            get
            {
                if ((this.mUIRow1Row == null))
                {
                    this.mUIRow1Row = new WinRow(this);
                    #region Search Criteria
                    this.mUIRow1Row.SearchProperties[WinRow.PropertyNames.Name] = "Row 1";
                    this.mUIRow1Row.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mUIRow1Row.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIRow1Row;
            }
        }
        #endregion
        
        #region Fields
        private WinRow mUIRow1Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "13";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIVerticalScrollBar UIVerticalScrollBar
        {
            get
            {
                if ((this.mUIVerticalScrollBar == null))
                {
                    this.mUIVerticalScrollBar = new UIVerticalScrollBar(this);
                }
                return this.mUIVerticalScrollBar;
            }
        }
        #endregion
        
        #region Fields
        private UIVerticalScrollBar mUIVerticalScrollBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIVerticalScrollBar : WinScrollBar
    {
        
        public UIVerticalScrollBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinScrollBar.PropertyNames.Name] = "Vertical";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinControl UIPositionIndicator
        {
            get
            {
                if ((this.mUIPositionIndicator == null))
                {
                    this.mUIPositionIndicator = new WinControl(this);
                    #region Search Criteria
                    this.mUIPositionIndicator.SearchProperties[UITestControl.PropertyNames.Name] = "Position";
                    this.mUIPositionIndicator.SearchProperties[UITestControl.PropertyNames.ControlType] = "Indicator";
                    this.mUIPositionIndicator.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIPositionIndicator;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIPositionIndicator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIGrdCtrSummaryWindow : WinWindow
    {
        
        public UIGrdCtrSummaryWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grdCtrSummary";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UINoadsinthiscampaignrTable UINoadsinthiscampaignrTable
        {
            get
            {
                if ((this.mUINoadsinthiscampaignrTable == null))
                {
                    this.mUINoadsinthiscampaignrTable = new UINoadsinthiscampaignrTable(this);
                }
                return this.mUINoadsinthiscampaignrTable;
            }
        }
        #endregion
        
        #region Fields
        private UINoadsinthiscampaignrTable mUINoadsinthiscampaignrTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UINoadsinthiscampaignrTable : WinTable
    {
        
        public UINoadsinthiscampaignrTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "No ads in this campaign received impressions in thepast 28 days, so there is no a" +
                "udience data to display.";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public UIDataPanelClient2 UIDataPanelClient
        {
            get
            {
                if ((this.mUIDataPanelClient == null))
                {
                    this.mUIDataPanelClient = new UIDataPanelClient2(this);
                }
                return this.mUIDataPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIDataPanelClient2 mUIDataPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDataPanelClient2 : WinClient
    {
        
        public UIDataPanelClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Data Panel";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinRow UIRow1Row
        {
            get
            {
                if ((this.mUIRow1Row == null))
                {
                    this.mUIRow1Row = new WinRow(this);
                    #region Search Criteria
                    this.mUIRow1Row.SearchProperties[WinRow.PropertyNames.Name] = "Row 1";
                    this.mUIRow1Row.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mUIRow1Row.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIRow1Row;
            }
        }
        #endregion
        
        #region Fields
        private WinRow mUIRow1Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemTabList : WinTabList
    {
        
        public UIItemTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinTabPage UICampaigns4TabPage
        {
            get
            {
                if ((this.mUICampaigns4TabPage == null))
                {
                    this.mUICampaigns4TabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUICampaigns4TabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Campaigns(4)";
                    this.mUICampaigns4TabPage.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUICampaigns4TabPage;
            }
        }
        
        public WinTabPage UIAds13TabPage
        {
            get
            {
                if ((this.mUIAds13TabPage == null))
                {
                    this.mUIAds13TabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIAds13TabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Ads(13)";
                    this.mUIAds13TabPage.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIAds13TabPage;
            }
        }
        
        public WinTabPage UIAccountSummaryTabPage
        {
            get
            {
                if ((this.mUIAccountSummaryTabPage == null))
                {
                    this.mUIAccountSummaryTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIAccountSummaryTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Account Summary";
                    this.mUIAccountSummaryTabPage.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIAccountSummaryTabPage;
            }
        }
        
        public WinTabPage UIAccountDetailTabPage
        {
            get
            {
                if ((this.mUIAccountDetailTabPage == null))
                {
                    this.mUIAccountDetailTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIAccountDetailTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Account Detail";
                    this.mUIAccountDetailTabPage.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIAccountDetailTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUICampaigns4TabPage;
        
        private WinTabPage mUIAds13TabPage;
        
        private WinTabPage mUIAccountSummaryTabPage;
        
        private WinTabPage mUIAccountDetailTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRibbonTabsTabList : WinTabList
    {
        
        public UIRibbonTabsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTabList.PropertyNames.Name] = "Ribbon Tabs";
            this.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIHomeTabPage
        {
            get
            {
                if ((this.mUIHomeTabPage == null))
                {
                    this.mUIHomeTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIHomeTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Home";
                    this.mUIHomeTabPage.WindowTitles.Add("Account2 #348004880(USD) - adSage for Performance");
                    #endregion
                }
                return this.mUIHomeTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIHomeTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDownloadPerformanceWindow : WinWindow
    {
        
        public UIDownloadPerformanceWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Download Performance";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public UIDgvAccountWindow UIDgvAccountWindow
        {
            get
            {
                if ((this.mUIDgvAccountWindow == null))
                {
                    this.mUIDgvAccountWindow = new UIDgvAccountWindow(this);
                }
                return this.mUIDgvAccountWindow;
            }
        }
        
        public UIToolStripToolBar UIToolStripToolBar
        {
            get
            {
                if ((this.mUIToolStripToolBar == null))
                {
                    this.mUIToolStripToolBar = new UIToolStripToolBar(this);
                }
                return this.mUIToolStripToolBar;
            }
        }
        
        public UIDgvUnDownloadDateRanWindow UIDgvUnDownloadDateRanWindow
        {
            get
            {
                if ((this.mUIDgvUnDownloadDateRanWindow == null))
                {
                    this.mUIDgvUnDownloadDateRanWindow = new UIDgvUnDownloadDateRanWindow(this);
                }
                return this.mUIDgvUnDownloadDateRanWindow;
            }
        }
        
        public UIToolStripWindow UIToolStripWindow
        {
            get
            {
                if ((this.mUIToolStripWindow == null))
                {
                    this.mUIToolStripWindow = new UIToolStripWindow(this);
                }
                return this.mUIToolStripWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDgvAccountWindow mUIDgvAccountWindow;
        
        private UIToolStripToolBar mUIToolStripToolBar;
        
        private UIDgvUnDownloadDateRanWindow mUIDgvUnDownloadDateRanWindow;
        
        private UIToolStripWindow mUIToolStripWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDgvAccountWindow : WinWindow
    {
        
        public UIDgvAccountWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dgvAccount";
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public UIRow0Row UIRow0Row
        {
            get
            {
                if ((this.mUIRow0Row == null))
                {
                    this.mUIRow0Row = new UIRow0Row(this);
                }
                return this.mUIRow0Row;
            }
        }
        
        public UIRow1Row1 UIRow1Row1
        {
            get
            {
                if ((this.mUIRow1Row1 == null))
                {
                    this.mUIRow1Row1 = new UIRow1Row1(this);
                }
                return this.mUIRow1Row1;
            }
        }
        #endregion
        
        #region Fields
        private UIRow0Row mUIRow0Row;
        
        private UIRow1Row1 mUIRow1Row1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRow0Row : WinRow
    {
        
        public UIRow0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, "System.Drawing.Bitmap;Hai Huang;Account2 #348004880(USD)", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public WinCell UIFalseCell
        {
            get
            {
                if ((this.mUIFalseCell == null))
                {
                    this.mUIFalseCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIFalseCell.SearchProperties[WinCell.PropertyNames.Value] = "False";
                    this.mUIFalseCell.WindowTitles.Add("Download Performance");
                    #endregion
                }
                return this.mUIFalseCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIFalseCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRow1Row1 : WinRow
    {
        
        public UIRow1Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, "System.Drawing.Bitmap;Katherine Zhu;Account2 #348004880(USD)", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public WinCell UIFalseCell
        {
            get
            {
                if ((this.mUIFalseCell == null))
                {
                    this.mUIFalseCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIFalseCell.SearchProperties[WinCell.PropertyNames.Value] = "False";
                    this.mUIFalseCell.WindowTitles.Add("Download Performance");
                    #endregion
                }
                return this.mUIFalseCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIFalseCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIToolStripToolBar : WinToolBar
    {
        
        public UIToolStripToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public UICustomDateSelectButtMenuItem UICustomDateSelectButtMenuItem
        {
            get
            {
                if ((this.mUICustomDateSelectButtMenuItem == null))
                {
                    this.mUICustomDateSelectButtMenuItem = new UICustomDateSelectButtMenuItem(this);
                }
                return this.mUICustomDateSelectButtMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UICustomDateSelectButtMenuItem mUICustomDateSelectButtMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICustomDateSelectButtMenuItem : WinMenuItem
    {
        
        public UICustomDateSelectButtMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "customDateSelectButton";
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UICreateCustomDateRangMenuItem
        {
            get
            {
                if ((this.mUICreateCustomDateRangMenuItem == null))
                {
                    this.mUICreateCustomDateRangMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUICreateCustomDateRangMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Create Custom Date Range...";
                    this.mUICreateCustomDateRangMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICreateCustomDateRangMenuItem.WindowTitles.Add("Download Performance");
                    #endregion
                }
                return this.mUICreateCustomDateRangMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUICreateCustomDateRangMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDgvUnDownloadDateRanWindow : WinWindow
    {
        
        public UIDgvUnDownloadDateRanWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dgvUnDownloadDateRange";
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable1 UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable1(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable1 mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDataGridViewTable1 : WinTable
    {
        
        public UIDataGridViewTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public UIRow0Row1 UIRow0Row
        {
            get
            {
                if ((this.mUIRow0Row == null))
                {
                    this.mUIRow0Row = new UIRow0Row1(this);
                }
                return this.mUIRow0Row;
            }
        }
        #endregion
        
        #region Fields
        private UIRow0Row1 mUIRow0Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRow0Row1 : WinRow
    {
        
        public UIRow0Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, "Download the real-time and missing performance data", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public WinCell UIDownloadrealtimeperfCell
        {
            get
            {
                if ((this.mUIDownloadrealtimeperfCell == null))
                {
                    this.mUIDownloadrealtimeperfCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIDownloadrealtimeperfCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Value, "Download the real-time and missing performance data", PropertyExpressionOperator.Contains));
                    this.mUIDownloadrealtimeperfCell.WindowTitles.Add("Download Performance");
                    #endregion
                }
                return this.mUIDownloadrealtimeperfCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIDownloadrealtimeperfCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIToolStripWindow : WinWindow
    {
        
        public UIToolStripWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "toolStrip";
            this.WindowTitles.Add("Download Performance");
            #endregion
        }
        
        #region Properties
        public WinButton UIDownloadcheckedaccouButton
        {
            get
            {
                if ((this.mUIDownloadcheckedaccouButton == null))
                {
                    this.mUIDownloadcheckedaccouButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDownloadcheckedaccouButton.SearchProperties[WinButton.PropertyNames.Name] = "Download checked accounts";
                    this.mUIDownloadcheckedaccouButton.WindowTitles.Add("Download Performance");
                    #endregion
                }
                return this.mUIDownloadcheckedaccouButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDownloadcheckedaccouButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICreateCustomDateRangWindow : WinWindow
    {
        
        public UICreateCustomDateRangWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Create Custom Date Range";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Create Custom Date Range");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        
        public UICreateCustomDateRangTitleBar UICreateCustomDateRangTitleBar
        {
            get
            {
                if ((this.mUICreateCustomDateRangTitleBar == null))
                {
                    this.mUICreateCustomDateRangTitleBar = new UICreateCustomDateRangTitleBar(this);
                }
                return this.mUICreateCustomDateRangTitleBar;
            }
        }
        
        public UIDateTimePickerStartClient UIDateTimePickerStartClient
        {
            get
            {
                if ((this.mUIDateTimePickerStartClient == null))
                {
                    this.mUIDateTimePickerStartClient = new UIDateTimePickerStartClient(this);
                }
                return this.mUIDateTimePickerStartClient;
            }
        }
        
        public UIDateTimePickerEndClient UIDateTimePickerEndClient
        {
            get
            {
                if ((this.mUIDateTimePickerEndClient == null))
                {
                    this.mUIDateTimePickerEndClient = new UIDateTimePickerEndClient(this);
                }
                return this.mUIDateTimePickerEndClient;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        
        private UICancelWindow mUICancelWindow;
        
        private UICreateCustomDateRangTitleBar mUICreateCustomDateRangTitleBar;
        
        private UIDateTimePickerStartClient mUIDateTimePickerStartClient;
        
        private UIDateTimePickerEndClient mUIDateTimePickerEndClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.WindowTitles.Add("Create Custom Date Range");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCancel";
            this.WindowTitles.Add("Create Custom Date Range");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICreateCustomDateRangTitleBar : WinTitleBar
    {
        
        public UICreateCustomDateRangTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create Custom Date Range");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDateTimePickerStartClient : WinClient
    {
        
        public UIDateTimePickerStartClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "dateTimePickerStart";
            this.WindowTitles.Add("Create Custom Date Range");
            #endregion
        }
        
        #region Properties
        public WinControl UISundayDecember182011DropDown
        {
            get
            {
                if ((this.mUISundayDecember182011DropDown == null))
                {
                    this.mUISundayDecember182011DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUISundayDecember182011DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUISundayDecember182011DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "20", PropertyExpressionOperator.Contains));
                    this.mUISundayDecember182011DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUISundayDecember182011DropDown;
            }
        }
        
        public WinControl UITuesdayJanuary102012DropDown
        {
            get
            {
                if ((this.mUITuesdayJanuary102012DropDown == null))
                {
                    this.mUITuesdayJanuary102012DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUITuesdayJanuary102012DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUITuesdayJanuary102012DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "20", PropertyExpressionOperator.Contains));
                    this.mUITuesdayJanuary102012DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUITuesdayJanuary102012DropDown;
            }
        }
        
        public WinControl UITuesdayJanuary032012DropDown
        {
            get
            {
                if ((this.mUITuesdayJanuary032012DropDown == null))
                {
                    this.mUITuesdayJanuary032012DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUITuesdayJanuary032012DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUITuesdayJanuary032012DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "20", PropertyExpressionOperator.Contains));
                    this.mUITuesdayJanuary032012DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUITuesdayJanuary032012DropDown;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUISundayDecember182011DropDown;
        
        private WinControl mUITuesdayJanuary102012DropDown;
        
        private WinControl mUITuesdayJanuary032012DropDown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDateTimePickerEndClient : WinClient
    {
        
        public UIDateTimePickerEndClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "dateTimePickerEnd";
            this.WindowTitles.Add("Create Custom Date Range");
            #endregion
        }
        
        #region Properties
        public WinControl UITuesdayJanuary172012DropDown
        {
            get
            {
                if ((this.mUITuesdayJanuary172012DropDown == null))
                {
                    this.mUITuesdayJanuary172012DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUITuesdayJanuary172012DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUITuesdayJanuary172012DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "20", PropertyExpressionOperator.Contains));
                    this.mUITuesdayJanuary172012DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUITuesdayJanuary172012DropDown;
            }
        }
        
        public WinControl UIItem01172012DropDown
        {
            get
            {
                if ((this.mUIItem01172012DropDown == null))
                {
                    this.mUIItem01172012DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUIItem01172012DropDown.SearchProperties[UITestControl.PropertyNames.Name] = "Tuesday, January 17, 2012";
                    this.mUIItem01172012DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUIItem01172012DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIItem01172012DropDown;
            }
        }
        
        public WinControl UIItem01172012DropDown1
        {
            get
            {
                if ((this.mUIItem01172012DropDown1 == null))
                {
                    this.mUIItem01172012DropDown1 = new WinControl(this);
                    #region Search Criteria
                    this.mUIItem01172012DropDown1.SearchProperties[UITestControl.PropertyNames.Name] = "Tuesday, January 10, 2012";
                    this.mUIItem01172012DropDown1.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUIItem01172012DropDown1.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIItem01172012DropDown1;
            }
        }
        
        public WinControl UIItem01172012DropDown2
        {
            get
            {
                if ((this.mUIItem01172012DropDown2 == null))
                {
                    this.mUIItem01172012DropDown2 = new WinControl(this);
                    #region Search Criteria
                    this.mUIItem01172012DropDown2.SearchProperties[UITestControl.PropertyNames.Name] = "Tuesday, January 03, 2012";
                    this.mUIItem01172012DropDown2.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUIItem01172012DropDown2.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIItem01172012DropDown2;
            }
        }
        
        public WinControl UIThursdayFebruary0920DropDown
        {
            get
            {
                if ((this.mUIThursdayFebruary0920DropDown == null))
                {
                    this.mUIThursdayFebruary0920DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUIThursdayFebruary0920DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUIThursdayFebruary0920DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, " 20", PropertyExpressionOperator.Contains));
                    this.mUIThursdayFebruary0920DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIThursdayFebruary0920DropDown;
            }
        }
        
        public WinControl UIThursdayFebruary0220DropDown
        {
            get
            {
                if ((this.mUIThursdayFebruary0220DropDown == null))
                {
                    this.mUIThursdayFebruary0220DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUIThursdayFebruary0220DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUIThursdayFebruary0220DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "20", PropertyExpressionOperator.Contains));
                    this.mUIThursdayFebruary0220DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIThursdayFebruary0220DropDown;
            }
        }
        
        public WinControl UIThursdayJanuary26201DropDown
        {
            get
            {
                if ((this.mUIThursdayJanuary26201DropDown == null))
                {
                    this.mUIThursdayJanuary26201DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUIThursdayJanuary26201DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUIThursdayJanuary26201DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "20", PropertyExpressionOperator.Contains));
                    this.mUIThursdayJanuary26201DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIThursdayJanuary26201DropDown;
            }
        }
        
        public WinControl UIThursdayJanuary19201DropDown
        {
            get
            {
                if ((this.mUIThursdayJanuary19201DropDown == null))
                {
                    this.mUIThursdayJanuary19201DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUIThursdayJanuary19201DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUIThursdayJanuary19201DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, " 20", PropertyExpressionOperator.Contains));
                    this.mUIThursdayJanuary19201DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIThursdayJanuary19201DropDown;
            }
        }
        
        public WinControl UIThursdayJanuary12201DropDown
        {
            get
            {
                if ((this.mUIThursdayJanuary12201DropDown == null))
                {
                    this.mUIThursdayJanuary12201DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUIThursdayJanuary12201DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUIThursdayJanuary12201DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "20", PropertyExpressionOperator.Contains));
                    this.mUIThursdayJanuary12201DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIThursdayJanuary12201DropDown;
            }
        }
        
        public WinControl UIThursdayJanuary05201DropDown
        {
            get
            {
                if ((this.mUIThursdayJanuary05201DropDown == null))
                {
                    this.mUIThursdayJanuary05201DropDown = new WinControl(this);
                    #region Search Criteria
                    this.mUIThursdayJanuary05201DropDown.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDown";
                    this.mUIThursdayJanuary05201DropDown.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, " 20", PropertyExpressionOperator.Contains));
                    this.mUIThursdayJanuary05201DropDown.WindowTitles.Add("Create Custom Date Range");
                    #endregion
                }
                return this.mUIThursdayJanuary05201DropDown;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUITuesdayJanuary172012DropDown;
        
        private WinControl mUIItem01172012DropDown;
        
        private WinControl mUIItem01172012DropDown1;
        
        private WinControl mUIItem01172012DropDown2;
        
        private WinControl mUIThursdayFebruary0920DropDown;
        
        private WinControl mUIThursdayFebruary0220DropDown;
        
        private WinControl mUIThursdayJanuary26201DropDown;
        
        private WinControl mUIThursdayJanuary19201DropDown;
        
        private WinControl mUIThursdayJanuary12201DropDown;
        
        private WinControl mUIThursdayJanuary05201DropDown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow11 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
}
